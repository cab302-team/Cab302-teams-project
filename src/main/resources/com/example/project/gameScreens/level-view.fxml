<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.image.*?>
<?import javafx.scene.text.*?>

<StackPane fx:id="gameStack" stylesheets="@level-styles.css"
           xmlns="http://javafx.com/javafx/17.0.12"
           xmlns:fx="http://javafx.com/fxml/1"
           fx:controller="com.example.project.controllers.gameScreens.LevelController">

    <!-- Background -->
    <ImageView fx:id="backgroundImage"
               managed="false"
               mouseTransparent="true"
               preserveRatio="false"
               StackPane.alignment="CENTER"
               fitWidth="${gameStack.width}"
               fitHeight="${gameStack.height}">
        <image>
            <Image url="@backgroundImage.png"/>
        </image>
    </ImageView>

    <!-- word window Rack Image -->
    <ImageView fx:id="WordWindowImage"
               mouseTransparent="true"
               preserveRatio="true"
               scaleX="0.9"
               scaleY="0.9"
               translateY="-64"
               StackPane.alignment="CENTER">
        <image>
            <Image url="@wordWindow.PNG"/>
        </image>
    </ImageView>

    <!-- Tile Rack Image -->
    <ImageView fx:id="tileRackImage"
               mouseTransparent="true"
               preserveRatio="true"
               scaleX="0.6"
               scaleY="0.6"
               translateY="54"
               StackPane.alignment="CENTER">
        <image>
            <Image url="@tileRack.png"/>
        </image>
    </ImageView>


    <BorderPane>

        <top>
            <StackPane>
                <VBox style="-fx-padding: 20 0 0 0;">
                    <HBox fx:id="upgradeTilesContainer" alignment="CENTER" spacing="10" />
                    <StackPane>
                        <Label fx:id="levelWonLostText" styleClass="youWonText" text="YOU WON" textFill="deeppink" />
                    </StackPane>
                </VBox>
            </StackPane>
        </top>

        <left>
            <VBox fx:id="sidebar" translateY="-120" alignment="TOP_CENTER" spacing="15"
                  styleClass="left-panel"
                  BorderPane.alignment="CENTER"
                  maxHeight="600">

                <!-- High Score block -->
                <VBox alignment="CENTER" spacing="5">
                    <Label text="Requirement" styleClass="score-label"/>
                    <HBox spacing="5" style="-fx-padding: 20 0 0 30;"> <!-- top=0, right=0, bottom=0, left=20 -->
                        <Label fx:id="scoreToBeatLabel" translateX="-16" styleClass="score-value" />
                    </HBox>
                </VBox>

                <!-- Divider line -->
                <Separator orientation="HORIZONTAL" prefWidth="180" styleClass="score-separator"/>

                <!-- Total Score block -->
                <VBox alignment="CENTER" translateY="40" spacing="5">
                    <Label text="Round Score" styleClass="score-label"/>
                    <HBox spacing="5" style="-fx-padding: 20 0 0 30;">
                        <Label fx:id="currentScoreLabel" translateX="-16" styleClass="total-score-value"/>
                        <!-- TODO: add level score and a word score. when onPlay word score animations pay then word score gets added to the level score -->
                    </HBox>
                </VBox>

                <!-- Word combo block (uses comboCountLabel + comboMultiplierLabel) -->
                <VBox alignment="CENTER" spacing="8">
                    <HBox alignment="CENTER" spacing="6" translateY="70" styleClass="combo-box">
                        <Label fx:id="comboCountLabel" styleClass="combo-bubble-blue" text="0">
                            <font>
                                <Font size="24.0" />
                            </font>
                        </Label>
                        <Label styleClass="combo-x" text="×" />
                        <Label fx:id="comboMultiplierLabel" styleClass="combo-bubble-red" text="0">
                            <font>
                                <Font size="24.0" />
                            </font>
                        </Label>
                    </HBox>
                </VBox>

            </VBox>
        </left>

        <center>
            <StackPane prefHeight="150.0" prefWidth="200.0" BorderPane.alignment="CENTER">
                <VBox alignment="CENTER" spacing="50">
                    <HBox fx:id="wordViewHBox" alignment="CENTER" fillHeight="false" translateY="-40" translateX="-142" spacing="11">
                        <VBox.margin>
                            <!-- added extra bottom margin below the word window -->
                            <Insets top="80"/>
                        </VBox.margin>
                    </HBox>
                    <HBox fx:id="tileRackContainer" alignment="CENTER" translateX="-142" fillHeight="false" spacing="10">
                    </HBox>
                    <HBox alignment="CENTER" translateX="-142" spacing="50">
                        <!-- Plays container -->
                        <VBox alignment="CENTER" styleClass="control-container">
                            <Label text="Plays" styleClass="control-label"/>
                            <HBox alignment="CENTER" spacing="10">
                                <Label fx:id="playsLeftLabel" styleClass="control-number" text="0"/>
                                <Button fx:id="playButton" onAction="#onPlayButton"
                                        styleClass="circle-button" text="▶"/>
                            </HBox>
                        </VBox>

                        <!-- Redraws container -->
                        <VBox alignment="CENTER"  styleClass="control-container">
                            <Label text="Redraws" styleClass="control-label"/>
                            <HBox alignment="CENTER" spacing="10">
                                <Label fx:id="redrawsLeftLabel" styleClass="control-number" text="0"/>
                                <Button fx:id="redrawButton" onAction="#onRedrawButton"
                                        styleClass="circle-button" text="⟳"/>
                            </HBox>
                        </VBox>

                        <!-- Add margin to move whole HBox down -->
                        <VBox.margin>
                            <Insets top="-10"/> <!-- adjust the number until it looks right bigger number will push down the buttons-->
                        </VBox.margin>
                    </HBox>
                    <Button translateX="-142" onAction="#onSkipButton" text="(Dev only) Skip to shop">
                        <VBox.margin>
                            <Insets top="-20"/> <!-- pushes it 30px further down bigger number means go further down the screen-->
                        </VBox.margin>
                    </Button>
                </VBox>

                <!-- redraw container -->
                <VBox fx:id="redrawContainer" alignment="BOTTOM_CENTER" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" spacing="10.0" styleClass="redraw-container" stylesheets="@level-styles.css" translateX="200.0" StackPane.alignment="CENTER_RIGHT">
                    <StackPane.margin>
                        <Insets bottom="50.0" right="20.0" />
                    </StackPane.margin>
                    <Button fx:id="confirmRedrawButton" mnemonicParsing="false" onAction="#onConfirmRedrawButton" text="Confirm Redraw">
                        <VBox.margin>
                            <Insets left="10.0" right="10.0" top="10.0" />
                        </VBox.margin></Button>
                </VBox>

                <!-- definition container -->
                <VBox fx:id="definitionContainer" alignment="BOTTOM_CENTER" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" spacing="10.0" styleClass="redraw-container" stylesheets="@level-styles.css" translateX="200.0" StackPane.alignment="CENTER_RIGHT">
                </VBox>


            </StackPane>
        </center>
    </BorderPane>
</StackPane>