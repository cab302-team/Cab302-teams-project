name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      #  This ensures that the JAR mockito-core-${mockito.version}.jar exists in ${settings.localRepository} (usually ~/.m2/repository) when the surefire plugin starts.
      - name: Resolve Maven dependencies
        run: mvn dependency:resolve

      - name: Build and run tests
        run: mvn clean verify

      # Debug: check compiled test classes
      - name: List target contents
        run: ls -R target || echo "No target directory found"

      - name: List test reports
        run: ls -l target/surefire-reports/

      - name: Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Maven Tests
          path: "target/surefire-reports/*.xml"
          reporter: java-junit
          fail-on-error: true

      - name: Generate Javadoc
        run: mvn javadoc:javadoc
      - name: Publish Javadoc
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: target/docs/javadoc
          clean: true
          target-folder: javadoc

      - name: Publish Coverage Report
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: target/site/jacoco
          clean: false
          target-folder: coverage

      # Convert the HTML reports into PDFs
      - name: Install wkhtmltopdf
        run: sudo apt-get update && sudo apt-get install -y wkhtmltopdf

      - name: Create output directory
        run: mkdir -p documentation-and-test-coverage

      - name: Convert JaCoCo coverage HTML to PDF
        run: |
          wkhtmltopdf --enable-local-file-access target/site/jacoco/index.html documentation-and-test-coverage/test-coverage.pdf

      # if not work try '--load-error-handling ignore' before the file:// param
      - name: Convert Javadoc HTML to PDF
        run: |
          wkhtmltopdf --enable-local-file-access file://$(pwd)/target/docs/javadoc/index.html documentation-and-test-coverage/javadoc.pdf

      # Commit the PDFs back to the repo
      - name: Commit documentation and coverage PDFs
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add documentation-and-test-coverage/*.pdf
          git commit -m "Update documentation and test coverage PDFs [skip ci]" || echo "Documentation generated, no code changed"
          git push